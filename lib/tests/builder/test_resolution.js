// Generated by CoffeeScript 1.6.3
var expect, fs, mock, path, spa, yaml;

fs = require("fs");

mock = require("mock-fs");

spa = require("spa");

yaml = require("js-yaml");

path = require("path");

expect = require('chai').expect;

describe('Modules resolution', function() {
  before(function() {
    this.old_cwd = process.cwd();
    process.chdir("/");
    return mock(yaml.safeLoad("testimonial: \n    module1:\n        a:\n            c.js: |\n                var m2 = require(\"../../module2\");\n        b.js: |\n            var b2 = require(\"/module2/b\");\n            var ac = require(\"./a/c\");\n    module2:\n        index.js: |\n            var a1 = require(\"a1/../b\");\n        b.js: |\n            var a1 = require(\"a1/c\");\n    spa.yaml: |\n        root: \"/testimonial/\"\n        extensions: \n            - .js\n        paths:\n            a1: \"/module1/a\"\n        hosting:\n            \"/(**/*.js)\": \"http://127.0.0.1:8010/$1\"\n        manifest: \"manifest.json\""));
  });
  it('should report loop in dependencies', function() {
    var builder, config, source;
    source = fs.readFileSync("/testimonial/spa.yaml", {
      encoding: "utf8"
    });
    config = yaml.safeLoad(source);
    builder = new spa.Builder(config);
    return expect(builder.build.bind(builder)).to["throw"](spa.CyclicDependenciesError);
  });
  return after(function() {
    mock.restore();
    return process.chdir(this.old_cwd);
  });
});
